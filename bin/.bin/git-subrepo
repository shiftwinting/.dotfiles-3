#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys
from pathlib import Path


def add(args):
	remote_url = args.remote_url
	name = remote_url.split("/")[-1].rstrip(".git")
	subprocess.call(["git", "remote", "add", "-f", "--no-tags", name, remote_url])


def clone(args):
	remote_nickname = args.remote_nickname
	prefix_name = remote_nickname
	subprocess.call(
		[
			"git",
			"read-tree",
			"--prefix={}".format(prefix_name),
			"-u",
			"{}/master".format(remote_nickname),
		]
	)

	subprocess.call(["git", "reset"])


def pull(args):
	remote_nickname = args.remote_nickname
	prefix_name = remote_nickname
	subprocess.call(
		[
			"git",
			"merge",
			"-s",
			"subtree",
			"--squash",
			"--allow-unrelated-histories",
			"{}/master".format(remote_nickname),
		]
	)

	subprocess.call(["git", "reset"])


def main():
	parser = argparse.ArgumentParser()
	subparsers = parser.add_subparsers(dest="command")

	subparser_add = subparsers.add_parser("add")
	subparser_add.add_argument("remote_url")

	subparser_add = subparsers.add_parser("clone")
	subparser_add.add_argument("remote_nickname")

	subparser_add = subparsers.add_parser("pull")
	subparser_add.add_argument("remote_nickname")

	args = parser.parse_args()

	if args.command == "add":
		add(args)
	elif args.command == "clone":
		clone(args)
	elif args.command == "pull":
		pull(args)


if __name__ == "__main__":
	main()
