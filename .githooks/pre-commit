#!/usr/bin/env python3

import os
import shutil
import subprocess
import sys
import shutil


def format_shell_scripts(shell_scripts):
	if shell_scripts:
		if shutil.which("shfmt") is not None:
			subprocess.call(["shfmt", "-w", "-s"] + shell_scripts)


def format_python_scripts(python_scripts):
	if python_scripts:
		if shutil.which("isort") is not None:
			subprocess.call(["isort"] + python_scripts)

		if shutil.which("black") is not None:
			subprocess.call(["black"] + python_scripts)

	for script in python_scripts:
		unexpanded_script = subprocess.check_output(
			["unexpand", "--first-only", "-t4", script], universal_newlines=True
		)

		with open(script, "w") as f:
			f.write(unexpanded_script)


def main():
	shell_scripts = []
	python_scripts = []

	root_directory = subprocess.check_output(
		["git", "rev-parse", "--show-toplevel"], universal_newlines=True
	).strip()

	git_status_output = subprocess.check_output(
		["git", "status", "--porcelain"], universal_newlines=True
	).strip()

	if not git_status_output:
		sys.exit()

	changed_files_relative = [
		i.split()[1] for i in git_status_output.split("\n") if i.split()[0] != "D"
	]

	changed_files = [os.path.join(root_directory, i) for i in changed_files_relative]

	for changed_file in changed_files:
		filetype = subprocess.check_output(
			["file", changed_file], universal_newlines=True
		).lower()

		if "shell" in filetype:
			shell_scripts.append(changed_file)
		elif "python" in filetype:
			python_scripts.append(changed_file)

	format_shell_scripts(shell_scripts)
	format_python_scripts(python_scripts)

	subprocess.call(["git", "add", "-A"])


if __name__ == "__main__":
	main()
